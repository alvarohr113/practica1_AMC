/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FrameVisual;

import Comun.Lectura;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import puntos.Algoritmos;
import puntos.ParPuntos;
import puntos.Punto;

/**
 *
 * @author jaime
 */
public class ComprobarEstrategia extends javax.swing.JPanel {

    /**
     * Creates new form ComprobarEstrategia
     */
    private MainFrame mainF;
    private Menu m;
    
    //ArrayList<Punto> Puntos;
    
    private ParPuntos sol = null;

    public ComprobarEstrategia(MainFrame F, Menu p) {
        initComponents();

        
        mainF = F;
        m = p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btvolvermenu = new javax.swing.JButton();
        lbtitulo = new javax.swing.JLabel();
        btejecutar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbtabla = new javax.swing.JTable();
        btgraficar = new javax.swing.JButton();

        btvolvermenu.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btvolvermenu.setText("Volver al Menu");
        btvolvermenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btvolvermenubtVolverMenu(evt);
            }
        });

        lbtitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbtitulo.setText("Comprobar Estrategia");

        btejecutar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btejecutar.setText("Ejecutar");
        btejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btejecutarbtEjecutar(evt);
            }
        });

        tbtabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Estrategia", "Punto 1", "Punto 2", "Distancia", "Calculadas", "Tiempo (mseg)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbtabla);

        btgraficar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btgraficar.setText("Graficar Soluci√≥n");
        btgraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btgraficarbtGraficarSolucion(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(btejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btgraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btvolvermenu, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(lbtitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(lbtitulo)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btvolvermenu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btgraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83))
        );
    }// </editor-fold>//GEN-END:initComponents

   
    private void btvolvermenubtVolverMenu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btvolvermenubtVolverMenu
        mainF.cambiarPanel(m);
        this.setVisible(false);
    }//GEN-LAST:event_btvolvermenubtVolverMenu


    private void btejecutarbtEjecutar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btejecutarbtEjecutar

        DefaultTableModel dtm = new DefaultTableModel();
        String s[] = {"Estrategia", "Punto 1", "Punto 2", "Distancia", "Calculadas", "Tiempo(mseg)"};
        dtm.setColumnIdentifiers(s);

        String cadena = m.getLbDataSet() + ".tsp\nEstrategia\t    Punto 1\t\tPunto 2\t\tDistancia\tTiempo\tCalculadas";
        DecimalFormat df = new DecimalFormat("#0.00000000");

        long t1 = System.nanoTime();
        sol = Algoritmos.exhaustiva((ArrayList<Punto>) Menu.dataSetA.clone());
        long t2 = System.nanoTime();
        double aux = (double) (t2 - t1) / 1000000;
        dtm.addRow(new Object[]{"Exhaustivo", sol.getP1(), sol.getP2(), df.format(sol.getDistancia()), Algoritmos.getN(), aux});
        Lectura.generarSolucionCE("Exhaustivo", sol.getP1().toString(), sol.getP2().toString(), sol.getDistancia(), aux);

        
        t1 = System.nanoTime();
        sol = Algoritmos.exhaustivaPoda((ArrayList<Punto>) Menu.dataSetA.clone());
        t2 = System.nanoTime();
        aux = (double) (t2 - t1) / 1000000;
        dtm.addRow(new Object[]{"Exhaustivo P", sol.getP1(), sol.getP2(), df.format(sol.getDistancia()), Algoritmos.getN(), aux});
        Lectura.generarSolucionCE("Exhaustivo Poda", sol.getP1().toString(), sol.getP2().toString(), sol.getDistancia(), aux);

        
        
        t1 = System.nanoTime();
        sol = Algoritmos.DyV((ArrayList<Punto>) Menu.dataSetA.clone(), 0, Menu.dataSetA.size() - 1);
        t2 = System.nanoTime();
        aux = (double) (t2 - t1) / 1000000;
        dtm.addRow(new Object[]{"Divide y Venceras", sol.getP1(), sol.getP2(), df.format(sol.getDistancia()), Algoritmos.getN(), aux});

        Lectura.generarSolucionCE("Divide y Venceras", sol.getP1().toString(), sol.getP2().toString(), sol.getDistancia(), aux);

        t1 = System.nanoTime();
        sol = Algoritmos.DyV_Mejorado((ArrayList<Punto>) Menu.dataSetA.clone(), 0, Menu.dataSetA.size() - 1);
        t2 = System.nanoTime();
        aux = (double) (t2 - t1) / 1000000;
        dtm.addRow(new Object[]{"Divide y Venceras M", sol.getP1(), sol.getP2(), df.format(sol.getDistancia()), Algoritmos.getN(), aux});
        Lectura.generarSolucionCE("Divide y Venceras Mejorado", sol.getP1().toString(), sol.getP2().toString(), sol.getDistancia(), aux);
        tbtabla.setModel(dtm);

        
    }//GEN-LAST:event_btejecutarbtEjecutar

    private void btgraficarbtGraficarSolucion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btgraficarbtGraficarSolucion
        if (sol != null) {
            new Graficar(Menu.dataSetA, sol);
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debes ejecutar primero para poder mostrar la grafica",
                    "INFO", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btgraficarbtGraficarSolucion


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btejecutar;
    private javax.swing.JButton btgraficar;
    private javax.swing.JButton btvolvermenu;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbtitulo;
    private javax.swing.JTable tbtabla;
    // End of variables declaration//GEN-END:variables
}
